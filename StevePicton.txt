"The attached diagram was certainly used as a starting point, if not the final implementation. I know I used slightly different equations for the 24Mhz versus 36MHz systems. The propagation delay in the logic can be significant - a 15ns GAL typically had a delay of 10ns. With a 24MHz clock the period is about 40ns, so 10ns is around half of a +ve or -ve part of the clock.

The fundamental issue is that two MEMCs, when powered up and fed from the same 24MHz clock, will both produce a 8MHz output. However, the chances are the 8MHz signals won't be in phase and this condition must not persist.

If by chance they are in phase, then REF8M AND REF8S will produce a logic 1 when both high. The o/p of the 3-input OR gate is 1 also, so D-latch #3 is 1. This 1 allows the CLK24IN (from the motherboard) to be fed to the slave MEMC through the AND gate. When CLKBLK (Clock Block) is 0, the 24MHz input to the slave MEMC stays low. D-latches 1-3 are all clocked by CLK24IN.

When REF8M and REF8S both go low, the o/p of the dual i/p NOR goes to 1 and the o/p of the AND goes low. The o/p of the 3-i/p NOR remains at 1, as does CLKBLK. So the 24MHz clock continues to be fed to the slave MEMC.

It's only when REF8M and REF8S differ in logic levels that the o/p of the AND and NOR are both low. CLKBLK now becomes low and blocks the 24MHz clock from the slave MEMC.
"


"
The purpose of the A and B bit was to implement a simple state machine to detect when REF8M transitioned from 1 to 0 (which it will always do). This produces a 1 at 'B' which also goes into the OR gate, this causes CLKBLK to go high and will allow the 24MHz clock through to the slave MEMC once more. I think the idea was to turn off the clock feed to the slave for just a few 24MHz clock edges and then turn it on again. The B input to the 3 i/p OR may also have been something to do with avoiding problems with decoding glitches at the 8MHz clock edges. If the two 8MHz clock were then in phase all well and good. If not, the 24MHz gets blocked again for a few cycles before being allowed through once more.
"

